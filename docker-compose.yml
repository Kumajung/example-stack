version: '3.8'

services:
  # Service ที่ 1: PHP Application (App Server)
  app:
    # สั่งให้ build Image จาก Dockerfile ของเรา
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: my-php-app
    restart: unless-stopped
    ports:
      # Map Port 8080 ของ Host ไปที่ Port 80 ของ Container
      - "8080:80"
    volumes:
      # Mount โค้ดจาก local เข้าไปใน container (เหมาะสำหรับตอนพัฒนา)
      # หากต้องการให้โค้ดอยู่ใน Image เลย ให้เอาบรรทัดนี้ออก
      - ./src:/var/www/html
    environment:
      # ส่งค่า Environment Variables ให้ PHP ใช้
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      # สั่งให้รอจนกว่า Service 'db' จะพร้อมใช้งาน
      - db
    networks:
      - app-network

  # Service ที่ 2: MySQL Database (Database Server)
  db:
    image: mysql:8.0
    container_name: my-mysql-db
    restart: unless-stopped
    environment:
      # ตั้งค่า Root Password, Database, User, และ Password
      # Portainer จะให้เรากรอกค่าพวกนี้ตอน Deploy
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      # สร้าง Volume ชื่อ 'db_data' เพื่อเก็บข้อมูล Database อย่างถาวร
      # แม้จะลบ Container ทิ้ง ข้อมูลก็จะไม่หาย
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # Service ที่ 3: phpMyAdmin (Database Management Tool)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: my-phpmyadmin
    restart: unless-stopped
    ports:
      # Map Port 8081 ของ Host ไปที่ Port 80 ของ Container
      - "8081:80"
    environment:
      # บอก phpMyAdmin ว่า Host ของ Database คือ Service 'db'
      - PMA_HOST=db
      # บอก Port ของ MySQL
      - PMA_PORT=3306
    depends_on:
      - db
    networks:
      - app-network

# กำหนด Network ให้ Service คุยกันผ่านชื่อ Service ได้
networks:
  app-network:
    driver: bridge

# กำหนด Volumes ที่จะใช้
volumes:
  db_data:
    driver: local